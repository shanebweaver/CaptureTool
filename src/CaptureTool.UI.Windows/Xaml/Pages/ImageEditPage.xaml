<?xml version="1.0" encoding="utf-8" ?>
<local:ImageEditPageBase
    x:Class="CaptureTool.UI.Windows.Xaml.Pages.ImageEditPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:canvasui="using:Microsoft.Graphics.Canvas.UI.Xaml"
    xmlns:chromakey="using:CaptureTool.Edit.ChromaKey"
    xmlns:controls="using:CaptureTool.UI.Windows.Xaml.Controls"
    xmlns:converters="using:CaptureTool.UI.Windows.Xaml.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:CaptureTool.UI.Windows.Xaml.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:templateselectors="using:CaptureTool.UI.Windows.Xaml.TemplateSelectors"
    xmlns:viewmodels="using:CaptureTool.ViewModels"
    xmlns:views="using:CaptureTool.UI.Windows.Xaml.Views"
    d:DataContext="{d:DesignInstance Type=viewmodels:ImageEditPageViewModel}"
    mc:Ignorable="d">
    <Page.Resources>
        <converters:ColorTypeConverter x:Key="ColorTypeConverter" />
        <converters:ColorHexStringConverter x:Key="ColorHexStringConverter" />

        <DataTemplate x:Key="EmptyTemplate" x:DataType="chromakey:ChromaKeyColorOption">
            <Grid Margin="0,2,0,0" ColumnSpacing="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Rectangle
                    Width="22"
                    Height="22"
                    Fill="Gray"
                    RadiusX="4"
                    RadiusY="4" />
                <SymbolIcon Foreground="White" Symbol="Cancel" />
                <TextBlock
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Text="No effect" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ColorTemplate" x:DataType="chromakey:ChromaKeyColorOption">
            <Grid Margin="0,2,0,0" ColumnSpacing="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Rectangle
                    Width="22"
                    Height="22"
                    RadiusX="16"
                    RadiusY="16">
                    <Rectangle.Fill>
                        <SolidColorBrush Color="{x:Bind Color, Converter={StaticResource ColorTypeConverter}}" />
                    </Rectangle.Fill>
                </Rectangle>
                <TextBlock
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Text="{x:Bind Color, Converter={StaticResource ColorHexStringConverter}}" />
            </Grid>
        </DataTemplate>

        <templateselectors:ChromaKeyColorOptionTemplateSelector
            x:Key="ChromaKeyColorOptionTemplateSelector"
            ColorTemplate="{StaticResource ColorTemplate}"
            EmptyTemplate="{StaticResource EmptyTemplate}" />
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <CommandBar DefaultLabelPosition="Right" IsOpen="False">
            <!--  Chroma Key  -->
            <AppBarToggleButton
                IsChecked="{x:Bind ViewModel.ShowChromaKeyOptions, Mode=TwoWay}"
                Label="Chroma Key"
                Visibility="{x:Bind ViewModel.IsChromaKeyEnabled, Mode=OneWay}">
                <AppBarToggleButton.Icon>
                    <FontIcon Glyph="{StaticResource Color}" />
                </AppBarToggleButton.Icon>
            </AppBarToggleButton>
            <AppBarSeparator Visibility="{x:Bind ViewModel.IsChromaKeyEnabled, Mode=OneWay}" />
            <!--  Crop and orientation  -->
            <AppBarToggleButton
                x:Uid="ImageEdit_CropButton"
                Command="{x:Bind ViewModel.ToggleCropModeCommand}"
                Icon="Crop"
                IsChecked="{x:Bind ViewModel.IsInCropMode, Mode=OneWay}" />
            <AppBarButton
                x:Uid="ImageEdit_RotateButton"
                Command="{x:Bind ViewModel.RotateCommand}"
                Icon="Rotate" />
            <AppBarButton x:Uid="ImageEdit_FlipXButton" Command="{x:Bind ViewModel.FlipHorizontalCommand}">
                <AppBarButton.Icon>
                    <FontIcon
                        FontFamily="{StaticResource FluentSystemIcons}"
                        FontSize="32"
                        Glyph="{StaticResource FlipHorizontal32Regular}" />
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Uid="ImageEdit_FlipYButton" Command="{x:Bind ViewModel.FlipVerticalCommand}">
                <AppBarButton.Icon>
                    <FontIcon
                        FontFamily="{StaticResource FluentSystemIcons}"
                        FontSize="32"
                        Glyph="{StaticResource FlipVertical32Regular}" />
                </AppBarButton.Icon>
            </AppBarButton>
            <!--  Undo/Redo  -->
            <AppBarSeparator Visibility="{x:Bind ViewModel.IsUndoRedoEnabled, Mode=OneWay}" />
            <AppBarButton
                x:Uid="ImageEdit_UndoButton"
                Command="{x:Bind ViewModel.UndoCommand}"
                Icon="Undo"
                IsEnabled="False"
                Visibility="{x:Bind ViewModel.IsUndoRedoEnabled, Mode=OneWay}" />
            <AppBarButton
                x:Uid="ImageEdit_RedoButton"
                Command="{x:Bind ViewModel.RedoCommand}"
                Icon="Redo"
                IsEnabled="False"
                Visibility="{x:Bind ViewModel.IsUndoRedoEnabled, Mode=OneWay}" />
            <!--  Export  -->
            <AppBarSeparator />
            <AppBarButton
                x:Uid="ImageEdit_CopyButton"
                Command="{x:Bind ViewModel.CopyCommand}"
                Icon="Copy">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="C" Modifiers="Control" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>
            <AppBarButton
                x:Uid="ImageEdit_SaveButton"
                Command="{x:Bind ViewModel.SaveCommand}"
                Icon="Save">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="S" Modifiers="Control" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>
            <AppBarButton
                x:Uid="ImageEdit_PrintButton"
                Command="{x:Bind ViewModel.PrintCommand}"
                Icon="Print">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="P" Modifiers="Control" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>
        </CommandBar>

        <Grid
            x:Name="CanvasContainer"
            Margin="0,-1,0,0"
            Background="{ThemeResource ImageEditCanvasBackgroundBrush}"
            BorderBrush="{ThemeResource SystemControlBackgroundBaseLowBrush}"
            BorderThickness="0,1,0,0"
            Row="2">
            <controls:ImageCanvas
                x:Name="ImageCanvas"
                CanvasSize="{x:Bind ViewModel.ImageSize, Mode=OneWay}"
                CropRect="{x:Bind ViewModel.CropRect, Mode=TwoWay}"
                Drawables="{x:Bind ViewModel.Drawables, Mode=OneWay}"
                IsCropModeEnabled="{x:Bind ViewModel.IsInCropMode, Mode=OneWay}"
                Orientation="{x:Bind ViewModel.Orientation, Mode=OneWay}" />
        </Grid>

        <!--  Chroma key options  -->
        <Grid
            HorizontalAlignment="Center"
            Row="1"
            Visibility="{x:Bind ViewModel.ShowChromaKeyOptions, Mode=OneWay}">
            <CommandBar
                IsDynamicOverflowEnabled="False"
                IsOpen="False"
                OverflowButtonVisibility="Collapsed">
                <AppBarElementContainer VerticalContentAlignment="Center">
                    <Grid Margin="4">
                        <ComboBox
                            MinWidth="156"
                            ItemTemplateSelector="{StaticResource ChromaKeyColorOptionTemplateSelector}"
                            ItemsSource="{x:Bind ViewModel.ChromaKeyColorOptions, Mode=OneWay}"
                            SelectedIndex="{x:Bind ViewModel.SelectedChromaKeyColorOption, Mode=TwoWay}" />
                    </Grid>
                </AppBarElementContainer>

                <AppBarElementContainer VerticalContentAlignment="Center">
                    <Grid Margin="4">
                        <Slider
                            Width="148"
                            Maximum="100"
                            Minimum="0"
                            SnapsTo="StepValues"
                            StepFrequency="1"
                            TickFrequency="5"
                            TickPlacement="Outside"
                            Value="{x:Bind ViewModel.ChromaKeyTolerance, Mode=TwoWay}" />
                    </Grid>
                </AppBarElementContainer>
            </CommandBar>
        </Grid>
    </Grid>
</local:ImageEditPageBase>
